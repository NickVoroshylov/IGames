"""Initial

Revision ID: 44d48dbeda5a
Revises:
Create Date: 2025-07-29 16:19:52.297684

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "44d48dbeda5a"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "games",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("release_date", sa.Date(), nullable=True),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("times_listed", sa.Integer(), nullable=False),
        sa.Column("reviews_number", sa.Integer(), nullable=False),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("plays", sa.Integer(), nullable=False),
        sa.Column("playing", sa.Integer(), nullable=False),
        sa.Column("backlogs", sa.Integer(), nullable=False),
        sa.Column("whitelist", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "genres",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "game_genres",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("game_id", "genre_id", name="uq_game_genre"),
    )
    op.create_index(op.f("ix_game_genres_game_id"), "game_genres", ["game_id"], unique=False)
    op.create_index(op.f("ix_game_genres_genre_id"), "game_genres", ["genre_id"], unique=False)
    op.create_table(
        "game_teams",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("game_id", "team_id", name="uq_game_team"),
    )
    op.create_index(op.f("ix_game_teams_game_id"), "game_teams", ["game_id"], unique=False)
    op.create_index(op.f("ix_game_teams_team_id"), "game_teams", ["team_id"], unique=False)
    op.create_table(
        "reviews",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("review", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reviews_game_id"), "reviews", ["game_id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "user_liked_genres",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "genre_id"),
        sa.UniqueConstraint("user_id", "genre_id", name="uix_user_genre"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_liked_genres")
    op.drop_table("users")
    op.drop_index(op.f("ix_reviews_game_id"), table_name="reviews")
    op.drop_table("reviews")
    op.drop_index(op.f("ix_game_teams_team_id"), table_name="game_teams")
    op.drop_index(op.f("ix_game_teams_game_id"), table_name="game_teams")
    op.drop_table("game_teams")
    op.drop_index(op.f("ix_game_genres_genre_id"), table_name="game_genres")
    op.drop_index(op.f("ix_game_genres_game_id"), table_name="game_genres")
    op.drop_table("game_genres")
    op.drop_table("teams")
    op.drop_table("roles")
    op.drop_table("genres")
    op.drop_table("games")
    # ### end Alembic commands ###
